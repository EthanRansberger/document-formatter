name: Build Docs
permissions:
  contents: write
  actions: write
on:
  push:
    branches:
      - main
jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Generate formatted documents
        run: |
          python src/main.py
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Update formatted documents"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate unique tag name
        id: tag_name
        run: echo "TAG_NAME=pre-release-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      - name: Create pre-release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: 'Pre-Release'
          draft: false
          prerelease: true
      - name: Upload DOCX file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: path/to/generated/document.docx
          asset_name: document.docx
          asset_content_type: application/vnd.openxmlformats-officedocument.wordprocessingml.document
      - name: Upload PDF file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: path/to/generated/document.pdf
          asset_name: document.pdf
          asset_content_type: application/pdf
      - name: Log success message
        run: echo "Formatted documents generated, pushed, and uploaded to pre-release successfully."
      - name: Log error message on failure
        if: failure()
        run: echo "An error occurred during the build-docs process." > error_log.txt